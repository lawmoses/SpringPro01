<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

<!-- Advice 클래스를 빈으로 등록 -->
	<bean id="profiler" class="chap06_02.Profiler"></bean>
	<bean id="cache" class="chap06_03.ArticleCacheAdvice"></bean>
	
<!-- Aspect 설정: Advice를 어떤 Pointcut에 적용할 지 설정 -->
	<aop:config>
		<aop:aspect id="traceAspect" ref="profiler" order="2">
			<aop:pointcut id="publicMethod" expression="within(chap06_02.*)" />
			<aop:around pointcut-ref="publicMethod"  method="trace"/>
		</aop:aspect>
	</aop:config>
	
	<aop:config>
		<aop:aspect id="cacheAspect" ref="cache" order="1">
			<aop:around method="cache" pointcut="execution(public * chap06_03.ReadArticleServiceImpl.*(..))"/>
		</aop:aspect>
	</aop:config>

	<bean id="writeArticleService" class="chap06_02.WriteArticleServiceImpl">
		<constructor-arg><ref bean="articleDao"/> </constructor-arg>
	</bean>
	
	<bean id="articleDao" class="chap06_03.MemoryArticleDao"></bean>
	
	<bean id="readArticleService" class="chap06_03.ReadArticleServiceImpl">
		<property name="articleDao" ref="articleDao"></property>
	</bean>
	
</beans>




